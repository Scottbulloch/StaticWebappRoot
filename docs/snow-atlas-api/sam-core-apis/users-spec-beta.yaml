
---
  openapi: 3.0.3
  info:
    title: 'SAM: User accounts'
    description: API for interacting with User Accounts.
    version: 1.0.0
    contact:
      name: Snow Software, Inc.
      url: https://www.snowsoftware.com
  servers:
  - url: https://{region}.snowsoftware.io
    variables:
      region:
        enum:
        - westeurope
        - australiasoutheast
        - eastus2
        - uksouth
        default: westeurope
  paths:
    "/api/sam/estate/v1/user-accounts/{id}":
      get:
        description: Returns the details of a user.
        summary: Get user
        operationId: getUserAccount
        parameters:
        - name: id
          in: path
          description: The unique ID of the user for which details will be returned.
          required: true
          schema:
            type: string
        responses:
          '200':
            description: 'OK: Your request succeeded.'
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/UserAccountDetail"
          '400':
            "$ref": "#/components/responses/400"
          '404':
            "$ref": "#/components/responses/404"
          '500':
            "$ref": "#/components/responses/500"
        security:
        - BearerAuth:
          - sam.user.r
        tags:
          - User
      patch:
        summary: Update User
        description: Modifies the properties of a specific user. 
        operationId: updateUser
        parameters:
        - name: id
          in: path
          description: The unique ID of the user for which details will be returned.
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json-patch+json:
              schema:
                "$ref": "#/components/schemas/PatchRequest"
        responses:
          '200':
            description: 'OK: Your request succeeded.'
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/UserAccountDetail"
          '400':
            "$ref": "#/components/responses/400"
          '404':
            "$ref": "#/components/responses/404"
          '500':
            "$ref": "#/components/responses/500"
        security:
        - BearerAuth:
          - sam.user.u
        tags:
          - User
    "/api/sam/estate/v1/user-accounts":
      get:
        description: Returns a collection of users.
        summary: Get users
        operationId: getUserAccounts
        parameters:
        - name: page_size
          in: query
          description: The maximum number of items in the response.
          schema:
            type: integer
            default: 100
        - name: page_number
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: filter
          in: query
          description: |-
            Filter the collection of Users. Format of the query string parameter:
  
            ```
            <filter name> <operator>  -<value>
            ```
  
            Filter name | Description | Data type | Example
            :--- | --- | --- | ---
            userName | The userName of a user  | String | ?filter=userName -eq "Sammy"
            status | The status of a user  | String | ?filter=status -ne "active"
            fullName | The fullName of a user | String | ?filter=fullName -contains "Sammy"
  
            For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).
          required: false
          schema:
            type: string
            example: status -eq "active"
        responses:
          '200':
            description: 'OK: Your request succeeded.'
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/FilteredResponseWithLinksOfUserAccount"
          '400':
            "$ref": "#/components/responses/400"
          '500':
            "$ref": "#/components/responses/500"
        security:
        - BearerAuth:
          - sam.user.r
        tags:
          - Collection
    "/api/sam/estate/v1/user-accounts-discovery/{id}":
      get:
        description: Returns the discovery data for a specific user.
        summary: Get user discovery data
        operationId: getUserAccountDiscovery
        parameters:
        - name: id
          in: path
          description: The unique ID of the user account for which details will be returned.
          required: true
          schema:
            type: string
        responses:
          '200':
            description: 'OK: Your request succeeded.'
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/UserAccountDiscoveryDetail"
          '400':
            "$ref": "#/components/responses/400"
          '404':
            "$ref": "#/components/responses/404"
          '500':
            "$ref": "#/components/responses/500"
        security:
        - BearerAuth:
          - sam.user.r
        tags:
          - User
    "/api/sam/estate/v1/user-accounts-discovery":
      get:
        description: Returns discovery data for a collection of users.
        summary: Get users discovery data
        operationId: getUserAccountsDiscovery
        parameters:
        - name: page_size
          in: query
          description: The maximum number of items in the response.
          schema:
            type: integer
            default: 100
        - name: page_number
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: filter
          in: query
          description: |-
            Filter the collection of user discovery details. Format of the query string parameter:
  
            ```
            <filter name> <operator>  -<value>
            ```
  
            Filter name | Description | Data type | Example
            :--- | --- | --- | ---
             domainName | The domainName for users | String | ?filter=domainName -eq "thebagel.co"
            samAccountName | The samAccountName of a user  | String | ?filter=samAccountName -eq "thebagel\ssmith"
            email | The email of a user | String | ?filter=email -eq "ssmith@example.com"
  
            For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).
          required: false
          schema:
            type: string
            example: domainName -eq "example.com"
        responses:
          '200':
            description: 'OK: Your request succeeded.'
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/FilteredResponseWithLinksOfUserAccountDiscovery"
          '400':
            "$ref": "#/components/responses/400"
          '500':
            "$ref": "#/components/responses/500"
        security:
        - BearerAuth:
          - sam.user.r
        tags:
          - Collection
    "/api/sam/estate/v1/user-accounts-metering":
      get:
        description: Returns metering data for a collection of users.
        summary: Get users metering data
        operationId: getUserAccountsMetering
        parameters:
        - name: page_size
          in: query
          description: The maximum number of items in the response.
          schema:
            type: integer
            default: 100
        - name: page_number
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: filter
          in: query
          description: |-
            Filter the collection account metering. Format of the query string parameter:
  
            ```
            <filter name> <operator>  -<value>
            ```
  
            Filter name | Description | Data type | Example
            :--- | --- | --- | ---
            metricID | The user accounts metricID | String | ?filter=metricID -eq "2823fbea-bd7b-4f4f-9f0c-780a5f26218c"
            applicationID | The user accounts applicationID  | String | ?filter=applicationID  -eq "85d5dc09-115c-40db-a2f6-09f9c935852e"
            organizationID | The user accounts organizationID | String | ?filter=organizationID -eq"317db6a5-e16d-4e3b-a745-1f973690e982"
  
            For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).
          required: false
          schema:
            type: string
            example: applicationID  -eq "85d5dc09-115c-40db-a2f6-09f9c935852e"
        responses:
          '200':
            description: 'OK: Your request succeeded.'
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/FilteredResponseWithLinksOfUserAccountMetering"
          '400':
            "$ref": "#/components/responses/400"
          '500':
            "$ref": "#/components/responses/500"
        security:
        - BearerAuth:
          - sam.user.r
        tags:
          - Collection
    "/api/sam/estate/v1/user-accounts/{id}/metering":
      get:
        description: Returns metering data for a specific user.
        summary: Get user metering data
        operationId: getUserMetering
        parameters:
        - name: id
          in: path
          description: The unique ID of the user for which details will be returned.
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          description: The maximum number of items in the response.
          schema:
            type: integer
            default: 100
        - name: page_number
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: filter
          in: query
          description: |-
            Filter the collection account metering. Format of the query string parameter:
  
            ```
            <filter name> <operator>  -<value>
            ```
  
            Filter name | Description | Data type | Example
            :--- | --- | --- | ---
            metricID | The user accounts metricID | String | ?filter=metricID -eq "2823fbea-bd7b-4f4f-9f0c-780a5f26218c"
            applicationID | The user accounts applicationID  | String | ?filter=applicationID  -eq "85d5dc09-115c-40db-a2f6-09f9c935852e"
            organizationID | The user accounts organizationID | String | ?filter=organizationID -eq"317db6a5-e16d-4e3b-a745-1f973690e982"
  
            For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).
          required: false
          schema:
            type: string
            example: applicationID  -eq "85d5dc09-115c-40db-a2f6-09f9c935852e"
        responses:
          '200':
            description: 'OK: Your request succeeded.'
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/FilteredResponseWithLinksOfUserAccountMetering"
          '400':
            "$ref": "#/components/responses/400"
          '404':
            "$ref": "#/components/responses/404"
          '500':
            "$ref": "#/components/responses/500"
        security:
        - BearerAuth:
          - sam.user.r
        tags:
          - User
  components:
    schemas:
      PatchRequest:
        items:
          $ref: "#/components/schemas/JSONPatchRequestReplace"
      JSONPatchRequestReplace:
        type: object
        additionalProperties: false
        required:
          - value
          - op
          - path
        properties:
          path:
            description: "A JSON Pointer path."
            example: "/fullName"
            type: string
          value:
            description: "The value to add, replace, or test."
            example: "John Doe"
          op:
            description: "The operation to perform."
            example: "replace"
            type: string
            enum:
              - "replace"
            x-enumDescriptions:
              replace: Replaces a value.
      Link:
        type: object
        additionalProperties: false
        properties:
          href:
            description: The associated relative URL.
            type: string
            example: api/sam/estate/v1/...
            nullable: true
          rel:
            description: Specifies the relationship between the current document and
              the linked document/resource.
            type: string
            example: self
            nullable: true
          method:
            description: The method to access related resources.
            type: string
            example: GET
            nullable: true
        required:
          - href
          - rel
          - method
      UserAccountDetail:
        type: object
        additionalProperties: false
        properties:
          id:
            type: string
            example: d983ee47-92c9-47ad-9975-ec85d2a479a1
            format: guid
            description: The unique ID of the user.
          userName:
            type: string
            example: ssmith
            nullable: true
            description: The login name for the user.
          status:
            type: string
            example: Active
            nullable: true
            description: The current status of the user.
          email:
            type: string
            example: ssmith@example.com
            nullable: true
            description: The user's email address.
          organizationId:
            type: string
            example: 8b4f2d90-99e7-408a-bad6-68d491e94dba
            format: guid
            description: The unique ID of the user's organization.
          fullName:
            type: string
            example: Sammy Smith
            nullable: true
            description: The user's full name.
          phoneNumber:
            type: string
            example: 789-654-1236
            nullable: true
            description: The user's phone number.
          location:
            type: string
            example: Austin
            nullable: true
            description: The user's location.
          roomNumber:
            type: string
            example: '5716'
            nullable: true
            description: The user's room number.
          quarantineDate:
            type: string
            format: date-time
            nullable: true
            description: The date at which this user was marked as quarantined.
          lastLogon:
            type: string
            format: date-time
            nullable: true
            description: The date this user last logged in.
          lastUpdate:
            type: string
            format: date-time
            nullable: true
            description: The date this user was last updated.
          updatedDate:
            type: string
            format: date-time
            nullable: true
            description: The date this user was last updated.
          updatedBy:
            type: string
            example: Data Update Job
            nullable: true
            description: The name of the entity that last updated this user.
          autoQuarantineManagement:
            type: boolean
            example: true
            description: "```true``` if this user is subject to auto quarantine management; otherwise, ```false```."
          autoEditing:
            type: boolean
            example: true
            description: "```true``` if this user is subject to auto editing; otherwise, ```false```."
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - id
          - _links
      ErrorContent:
        type: object
        additionalProperties: false
        properties:
          code:
            type: integer
            description: The HTTP status code.
            format: int32
          message:
            type: string
            description: The error message.
            nullable: true
        required:
          - code
          - message
      ErrorResponse:
        type: object
        additionalProperties: false
        properties:
          error:
            description: The error details.
            oneOf:
            - "$ref": "#/components/schemas/ErrorContent"
        required:
          - error
      Pagination:
        type: object
        description: The pagination details.
        additionalProperties: false
        properties:
          page_size:
            type: integer
            description: The page size you requested.
            format: int32
            example: 100
          page_number:
            type: integer
            description: The page number you requested.
            format: int32
            example: 1
          total_pages:
            type: integer
            description: The total number of pages.
            format: int32
            nullable: true
            example: 1
          total_items:
            type: integer
            description: The total number of items.
            format: int32
            nullable: true
            example: 732
        required:
          - page_size
          - page_number
      UserAccount:
        type: object
        additionalProperties: false
        properties:
          id:
            type: string
            example: 8b4f2d90-99e7-408a-bad6-68d491e94dba
            format: guid
            description: The unique ID of the user.
          userName:
            type: string
            example: ssmith
            nullable: true
            description: The login name of the user.
          status:
            type: string
            example: Active
            nullable: true
            description: The current status of the user.
          email:
            type: string
            example: ssmith@example.com
            nullable: true
            description: The user's email address.
          fullName:
            type: string
            example: Sammy Smith
            nullable: true
            description: The user's full name.
          location:
            type: string
            example: Austin
            nullable: true
            description: The user's location.
          lastLogon:
            type: string
            format: date-time
            nullable: true
            description: The date of the user's last login.
          orgHierarchy:
            type: string
            example: Snow Software
            nullable: true
            description: The user's organization.
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - id
          - _links
      FilteredResponseWithLinksOfUserAccount:
        type: object
        additionalProperties: false
        properties:
          pagination:
            "$ref": "#/components/schemas/Pagination"
          items:
            type: array
            description: A collection of filtered user accounts.
            items:
              "$ref": "#/components/schemas/UserAccount"
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - pagination
          - items
          - _links
      UserAccountDiscoveryDetail:
        type: object
        additionalProperties: false
        properties:
          objectId:
            type: string
            example: 32aeda0a-80dc-475a-907f-2d250a3a8614
            format: guid
            description: The unique ID of the object.
          domainName:
            type: string
            example: thebagel
            nullable: true
            description: The user's domain name.
          samAccountName:
            type: string
            example: thebagel\ssmith
            nullable: true
            description: The user's SAM account name.
          firstName:
            type: string
            example: Sammy
            nullable: true
            description: The user's first name.
          lastName:
            type: string
            example: Smith
            nullable: true
            description: The user's last name.
          email:
            type: string
            example: ssmith@example.com
            nullable: true
            description: The user's email address.
          homePhoneNumber:
            type: string
            example: 789-654-1236
            nullable: true
            description: The user's phone number.
          mobilePhoneNumber:
            type: string
            example: "555-123-4567"
            nullable: true
            description: The user's mobile phone number.
          lastLogonActivity:
            type: string
            format: date-time
            nullable: true
            description: The date of the user's last login.
          whenCreated:
            type: string
            format: date-time
            nullable: true
            description: The date the user was created.
          whenChanged:
            type: string
            format: date-time
            nullable: true
            description: The date the user was last modified.
          isEnabled:
            type: boolean
            nullable: true
            description: "```true``` if this user is enabled; otherwise, ```false```."
          userAccountControl:
            type: integer
            format: int32
            nullable: true
            description: The user's account control value.
            example: 32768
          managerName:
            type: string
            example: Billy Hare
            nullable: true
            description: The full name of the user's manager.
          managerEmail:
            type: string
            example: bhare@example.com
            nullable: true
            description: The email address of the user's manager.
          organizationalUnit:
            type: string
            example: Laurel_MI
            nullable: true
            description: The name of the user's organizational unit.
          userPrincipalName:
            type: string
            example: ssmith@example.com
            nullable: true
            description: The user's principal name.
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - objectId
          - _links
      UserAccountDiscovery:
        type: object
        additionalProperties: false
        properties:
          objectId:
            type: string
            format: guid
            description: The unique ID of the object.
            example: 32aeda0a-80dc-475a-907f-2d250a3a8614
          domainName:
            type: string
            example: thebagel.co
            nullable: true
            description: The user's domain name.
          samAccountName:
            type: string
            example: thebagel\ssmith
            nullable: true
            description: The user's SAM account name.
          email:
            type: string
            example: ssmith@example.com
            nullable: true
            description: The user's email address.
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - objectId
          - _links
      FilteredResponseWithLinksOfUserAccountDiscovery:
        type: object
        additionalProperties: false
        properties:
          items:
            type: array
            items:
              "$ref": "#/components/schemas/UserAccountDiscovery"
            description: A collection of filtered user discovery data.
          pagination:
            "$ref": "#/components/schemas/Pagination"
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - items
          - pagination
          - _links
      UserAccountMetering:
        type: object
        additionalProperties: false
        properties:
          id:
            type: string
            format: guid
            example: 32aeda0a-80dc-475a-907f-2d250a3a8614
            description: The unique ID of the object.
          metricID:
            type: string
            example: 2823fbea-bd7b-4f4f-9f0c-780a5f26218c
            format: guid
            description: The unique ID of the metric object.
          applicationId:
            type: string
            example: 85d5dc09-115c-40db-a2f6-09f9c935852e
            format: guid
            description: The unique ID of the application.
          organizationId:
            type: string
            example: 317db6a5-e16d-4e3b-a745-1f973690e982
            format: guid
            description: The unique ID of the organization.
          initialRequirement:
            type: integer
            format: int32
            example: 10000
            description: The initial requirement value.
          includedInBundle:
            type: integer
            format: int32
            example: 100
            description: The included in bundle value.
          outsideMetricPeriod:
            type: integer
            format: int32
            example: 100
            description: The outside metric period value.
          secondaryUseRightsDesktopLaptop:
            type: integer
            format: int32
            example: 54221
            description: The secondary use rights desktop/laptop value.
          secondaryUseRightsDevice:
            type: integer
            format: int32
            description: The secondary use rights device value.
            example: 32342
          extendedCoverageForDcc:
            type: integer
            format: int32
            example: 6345
            description: The extended coverage for DCC value.
          extendedCoverageForHost:
            type: integer
            format: int32
            example: 5993
            description: The extended coverage for host value.
          multipleVersionEdition:
            type: integer
            format: int32
            example: 1
            description: The multiple version edition value.
          virtualDesktopInfrastructure:
            type: integer
            format: int32
            example: 5343
            description: The virtual desktop infrastructure value.
          minimumRequirement:
            type: integer
            format: int32
            example: 1
            description: The minimum requirement value.
          coreFactor:
            type: integer
            format: int32
            example: 2
            description: The core factor value.
          requirement:
            type: integer
            format: int32
            example: 10
            description: The requirement value.
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - id
          - _links
      FilteredResponseWithLinksOfUserAccountMetering:
        type: object
        additionalProperties: false
        properties:
          items:
            type: array
            description: A collection of filtered responses that contain metering data links.
            items:
              "$ref": "#/components/schemas/UserAccountMetering"
          pagination:
            "$ref": "#/components/schemas/Pagination"
          _links:
            type: array
            description: A collection of links to related resources.
            items:
              "$ref": "#/components/schemas/Link"
        required:
          - items
          - pagination
          - _links
    securitySchemes:
      BearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    responses:
      "400":
        description: "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
            example:
              error:
                code: 400
                message: Invoice ID field needs to be a string.
      "404":
        description: "Not Found: The operation you requested failed because a resource associated with your request could not be found."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
            example:
              error:
                code: 404
                message: Resource with ID '32aeda0a-80dc-475a-907f-2d250a3a8614' not found.     
      "500":
        description: "Internal Server Error: Your request failed due to an internal error."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
            example:
              error:
                code: 500
                message: The service encountered an unexpected condition that prevented it from fulfilling the request.
  
  tags:
    - name: Collection
      description: Retuns a collection of users details.
    - name: User
      description: Returns or modifies a specific users details.