openapi: 3.0.3
info:
  title: 'SAM: Users view'
  description: API for interacting with aggregated user entity data.
  version: 1.0.0
  contact:
    name: Flexera
    url: https://www.flexera.com
servers:
  - url: https://{region}.snowsoftware.io
    variables:
      region:
        enum:
          - westeurope
          - australiasoutheast
          - eastus2
          - uksouth
        default: westeurope
paths:
  /api/sam/estate/v1/view/user-accounts/{id}/overview:
    get:
      description: >-
        Returns the number of computers, mobile devices, and applications associated with the given user along
        with the user's last sign-in date.
      summary: Get user overview
      operationId: getUserOverview
      parameters:
        - name: id
          in: path
          description: The unique ID of the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Your request succeeded.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOverview'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - BearerAuth:
            - sam.user.r
            - sam.computer.r
            - sam.application.r
            - sam.mobiledevice.r
      tags:
        - Aggregation
  /api/sam/estate/v1/view/user-accounts/{id}/details:
    get:
      description: Returns the details of a user account.
      summary: Get user details
      operationId: getUserDetails
      parameters:
        - name: id
          in: path
          description: The unique ID of the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Your request succeeded.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountDetail'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - BearerAuth:
            - sam.user.r
            - sam.application.r
            - sam.computer.r
            - sam.orgtree.r
      tags:
        - Aggregation
  /api/sam/estate/v1/view/user-accounts/{id}/devices:
    get:
      description: Returns a collection of devices associated with a user.
      summary: Get user devices
      operationId: getUserDevices
      parameters:
        - name: id
          in: path
          description: The unique ID of the user.
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          description: The maximum number of items in the response.
          schema:
            type: integer
            default: 100
        - name: page_number
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: filter
          in: query
          description: >-
            Filter the collection of devices. Format of the query string
            parameter:


            ```

            <filter name> <operator>  -<value>

            ```


            Filter name | Description | Data type | Example

            :--- | --- | --- | ---

            id | The unique ID for this device | Guid | ?filter=id -eq
            "123e4567-e89b-12d3-a456-426614174000"

            lastScanDate | The date and time that the device was last
            scanned | String | ?filter=lastScanDate -eq "2023-01-20T01:00:00Z"

            lastSignIn | The date and time of the last sign-in | String |
            ?filter=lastSignIn -lt "2023-05-26T14:30:00Z"

            name | The name of the device | String | ?filter=name
            -eq "MAC-02DQ5RXQ6LZ"

            organizationName | The organization associated with the device | String
            | ?filter=organizationName -eq "Flexera"

            signInCount | The number of times the device has been signed in to |
            Integer | ?filter=signInCount -gt 1

            type | The type of device | String | ?filter=type -eq "Computer"


            For more information on the available operators and which data types
            those operators work on, see [Filter API call
            results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).
          required: false
          schema:
            type: string
            example: status -eq "active"
      responses:
        '200':
          description: 'OK: Your request succeeded.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredResponseWithLinksOfUserDevices'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - BearerAuth:
            - sam.user.r
            - sam.computer.r
            - sam.mobiledevice.r
            - sam.orgtree.r
      tags:
        - Aggregation
  /api/sam/estate/v1/view/user-accounts/{id}/applications:
    get:
      description: Returns a collection of applications used by the given user.
      summary: Get user applications
      operationId: getUserApplications
      parameters:
        - name: id
          in: path
          description: The unique ID of the user.
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          description: The maximum number of items in the response.
          schema:
            type: integer
            default: 100
        - name: page_number
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: filter
          in: query
          description: >-
            Filter the collection of applications. Format of the query string
            parameter:


            ```

            <filter name> <operator>  -<value>

            ```


            Filter name | Description | Data type | Example

            :--- | --- | --- | ---

            applicationId | The unique ID of the application | Guid | 
            ?filter=applicationId -eq "25e6329f-2414-4ad4-8790-00bc0a81133b"

            applicationName | The name of the application  | String |
            ?filter=applicationName -eq "Snow Update Service"

            entitlementState | The user's entitlement state for the
            application  | String | ?filter=entitlementState -eq "Not covered"

            isNoLicenseRequired | Whether the application does not require licenses |
            Boolean | ?filter=isNoLicenseRequired -eq true


            For more information on the available operators and which data types
            those operators work on, see [Filter API call
            results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).
          required: false
          schema:
            type: string
            example: applicationName -eq "Snow Update Service"
      responses:
        '200':
          description: 'OK: Your request succeeded.'
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FilteredResponseWithLinksOfUserApplications
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - BearerAuth:
            - sam.user.r
            - sam.application.r
            - sam.computer.r
            - sam.license.r
      tags:
        - Aggregation
  /api/sam/estate/v1/view/user-accounts/{id}/application-rights:
    get:
      description: Returns a collection of application rights associated with the given user.
      summary: Get user application rights
      operationId: getUserApplicationRights
      parameters:
        - name: id
          in: path
          description: >-
            The unique ID of the user account.
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          description: The maximum number of items in the response.
          schema:
            type: integer
            default: 100
        - name: page_number
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: filter
          in: query
          description: >-
            Filter the collection of applications. Format of the query string
            parameter:


            ```

            <filter name> <operator>  -<value>

            ```


            Filter name | Description | Data type | Example

            :--- | --- | --- | ---

            applicationName | The name of an application  | String |
            ?filter=applicationName -eq "Snow Update Service"
            
            applicationId | The ID of an application  | String |
            ?filter=applicationId -eq "32aeda0a-80dc-475a-907f-2d250a3a8614"


            For more information on the available operators and which data types
            those operators work on, see [Filter API call
            results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).
          required: false
          schema:
            type: string
            example: applicationName -eq "Snow Update Service"
      responses:
        '200':
          description: 'OK: Your request succeeded.'
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FilteredResponseWithLinksOfUserApplicationRights
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - BearerAuth:
            - sam.user.r
            - sam.application.r
      tags:
        - Aggregation
components:
  schemas:
    Link:
      type: object
      additionalProperties: false
      properties:
        href:
          description: The associated relative URL.
          type: string
          example: api/sam/estate/v1/...
          nullable: true
        rel:
          description: >-
            Specifies the relationship between the current document and the
            linked document/resource.
          type: string
          example: self
          nullable: true
        method:
          description: The method to access related resources.
          type: string
          example: GET
          nullable: true
      required:
        - href
        - rel
        - method
    ErrorContent:
      type: object
      additionalProperties: false
      properties:
        code:
          type: integer
          description: The HTTP status code.
          format: int32
        message:
          type: string
          description: The error message.
          nullable: true
      required:
        - code
        - message
    ErrorResponse:
      type: object
      additionalProperties: false
      properties:
        error:
          description: The error details.
          oneOf:
            - $ref: '#/components/schemas/ErrorContent'
      required:
        - error
    Pagination:
      type: object
      description: The pagination details.
      additionalProperties: false
      properties:
        page_size:
          type: integer
          description: The page size you requested.
          format: int32
          example: 100
        page_number:
          type: integer
          description: The page number you requested.
          format: int32
          example: 1
        total_pages:
          type: integer
          description: The total number of pages.
          format: int32
          nullable: true
          example: 1
        total_items:
          type: integer
          description: The total number of items.
          format: int32
          nullable: true
          example: 1
      required:
        - page_size
        - page_number
    FilteredResponseWithLinksOfUserApplications:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        items:
          type: array
          description: A collection of filtered user application rights.
          items:
            $ref: '#/components/schemas/Application'
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - pagination
        - items
        - _links
    Application:
      type: object
      additionalProperties: false
      properties:
        applicationId:
          type: string
          example: 32aeda0a-80dc-475a-907f-2d250a3a8614
          format: guid
          nullable: false
          description: The unique ID of the application.
        applicationName:
          type: string
          example: Snow Update Service
          nullable: false
          description: The application name.
        isNoLicenseRequired:
          type: boolean
          nullable: false
          description: '```true``` if this application does not require a license; otherwise, ```false```.'
        metrics:
          type: array
          nullable: true
          description: A collection of metrics associated with a given application.
          items:
            $ref: '#/components/schemas/ApplicationMetric'
        usage:
          type: array
          nullable: true
          description: A collection of users associated with a given application.
          items:
            $ref: '#/components/schemas/ComputerUsage'
        entitlementState:
          type: string
          example: Not covered
          nullable: true
          description: The user's entitlement state for a given application.
      required:
        - applicationId
        - applicationName
    Computer:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: The unique ID of the computer.
          example: 15764003-3c61-4d5f-9839-a63271240519
          format: guid
        hostName:
          type: string
          description: The host name of the computer.
          example: COMPUTER_1
          nullable: true
        mostFrequentUser:
          type: string
          description: The unique ID of the most frequent user of the computer.
          example: b7edf6ea-f28a-4621-912f-ff145dedcc7a
          format: guid
          nullable: true
        mostRecentUser:
          type: string
          description: The unique ID of the most recent user of the computer.
          example: 00d5c098-965a-4f83-8903-9713a5eaa610
          format: guid
          nullable: true
        manufacturer:
          type: string
          description: The manufacturer of the computer.
          example: Dell Inc.
          nullable: true
        isPortable:
          type: boolean
          description: '```true``` if the computer is portable; otherwise, ```false```.'
          nullable: true
        isVirtual:
          type: boolean
          description: '```true``` if the computer is virtual; otherwise, ```false```.'
          nullable: true
        isServer:
          type: boolean
          description: '```true``` if the computer is a server; otherwise, ```false```.'
          nullable: true
        model:
          type: string
          description: The model of the computer.
          example: Latitude 7400
          nullable: true
        operatingSystem:
          type: string
          description: The operating system of the computer.
          example: Microsoft Windows 10 Enterprise
          nullable: true
        vendor:
          type: string
          description: The vendor of the computer.
          example: Joe's Computers
          nullable: true
        domain:
          type: string
          description: The domain of the computer.
          example: Domain 1
          nullable: true
        ipAddress:
          type: string
          description: The IP address of the computer.
          example: 208.80.154.224
          nullable: true
        isVdi:
          type: boolean
          description: >-
            ```true``` if the computer uses virtual desktop infrastructure;
            otherwise, ```false```.
          nullable: true
        lastScanDate:
          type: string
          description: The date and time that the computer was last scanned.
          format: date-time
        status:
          type: string
          description: The status of the computer.
          example: Active
          nullable: true
        organizationId:
          type: string
          description: The unique ID of the organization to which the computer belongs.
          example: b0b6c393-9d65-4642-9805-779d2fa24a23
          format: guid
          nullable: true
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
          nullable: false
      required:
        - id
        - _links
    ComputerUsage:
      type: object
      additionalProperties: false
      properties:
        userId:
          type: string
          example: 32aeda0a-80dc-475a-907f-2d250a3a8614
          format: guid
          description: The unique ID of the user.
          nullable: false
        computerId:
          type: string
          example: 32aeda0a-1234-475a-6789-2d250a3a8614
          format: guid
          description: The unique ID of the computer.
          nullable: false
        userName:
          type: string
          description: The name of the application user.
          nullable: true
          example: John Doe
        usedCount:
          type: integer
          description: The number of runs that the user has used the application.
          format: int32
          nullable: false
          example: 5
        usedMinutes:
          type: integer
          description: The number of minutes the user has used the application. This can be added to usedDays to get the total usage time.
          format: int64
          nullable: false
          example: 959
        usedDays:
          type: integer
          description: The number of days the user has used the application. This can be added to usedMinutes to get the total usage time.
          format: int32
          nullable: false
          example: 28
        lastUsed:
          type: string
          format: date-time
          example: 2021-09-18T13:48:00.000Z
          nullable: false
          description: The date and time the application was last used by the user on the computer.
      required:
        - userId
        - computerId
        - run
        - totalTime
        - lastUsed
    ApplicationMetric:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
          description: The unique ID of the metric.
          nullable: false
          example: 32aeda0a-80dc-475a-907f-2d250a3a8614
        name:
          type: string
          description: The name of the metric.
          nullable: true
          example: test metric
        isDefault:
          type: boolean
          description: '```true``` if the metric is the default metric; otherwise, ```false```.'
          nullable: true
        licenseComplianceData:
          $ref: '#/components/schemas/LicenseComplianceData'
      required:
        - id
        - licenseComplianceData
    LicenseComplianceData:
      type: object
      additionalProperties: false
      properties:
        requiredLicenses:
          type: integer
          description: The number of licenses required for the application.
          format: int32
          nullable: false
          example: 5
        initialRequirement:
          type: integer
          description: The number of licenses initially required for the application.
          format: int32
          nullable: false
          example: 8
        includedInBundle:
          type: integer
          description: The number of licenses included in the application bundle (if present) for the application.
          format: int32
          nullable: false
          example: 1
        outsideMetricPeriod:
          type: integer
          description: The number of licenses assigned to the application that are outside of the application's metering period.
          format: int32
          nullable: false
          example: 2  
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - requiredLicenses
        - initialRequirement
        - includedInBundle
        - outsideMetricPeriod
        - _links
    FilteredResponseWithLinksOfUserApplicationRights:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        items:
          type: array
          description: A collection of filtered user application rights.
          items:
            $ref: '#/components/schemas/ApplicationRight'
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - pagination
        - items
        - _links
    ApplicationRight:
      type: object
      additionalProperties: false
      properties:
        applicationId:
          type: string
          example: 32aeda0a-80dc-475a-907f-2d250a3a8614
          format: guid
          nullable: false
          description: The unique ID of the application.
        applicationName:
          type: string
          example: Snow Update Service
          nullable: false
          description: The application name.
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - applicationName
        - _links
    FilteredResponseWithLinksOfUserDevices:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        items:
          type: array
          description: A collection of filtered user devices.
          items:
            $ref: '#/components/schemas/UserDevice'
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - pagination
        - items
        - _links
    UserDevice:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          example: 32aeda0a-80dc-475a-907f-2d250a3a8614
          format: guid
          description: The unique ID of the device.
        name:
          type: string
          description: The name of the device.
          example: MAC-02DQ5RXQ6LZ
        organizationName:
          type: string
          description: The organization associated with the device.
          example: Flexera
        firstDiscovered:
          type: string
          format: date
          description: The date the device was first discovered.
          example: '2023-05-26'
        signInCount:
          type: integer
          description: The number of times the device has been signed in to.
          example: 1
        lastSignIn:
          type: string
          format: date-time
          description: The date and time of the last sign-in.
          example: '2023-05-26T14:30:00Z'
        lastUsed:
          type: string
          format: date-time
          description: The date and time the device was last used.
          example: '2023-05-26T15:00:00Z'
        type:
          type: string
          x-enumDescriptions:
            Computer: A computer device such as a desktop or laptop computer.
            MobileDevice: A mobile device such as a mobile phone.
          enum:
            - Computer
            - MobileDevice
          description: The type of device.
          example: Computer
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - id
        - _links
    UserOverview:
      type: object
      additionalProperties: false
      properties:
        applications:
          type: integer
          description: The total number of applications associated with the user.
          format: int32
          nullable: false
          example: 15
        computers:
          type: integer
          description: The total number of computers associated with the user.
          format: int32
          nullable: false
          example: 10
        mobileDevices:
          type: integer
          description: The total number of devices associated with the user.
          format: int32
          nullable: false
          example: 5
        lastSignIn:
          type: string
          format: date-time
          description: The date and time the user last signed into a computer or mobile device.
          example: '2023-05-26T14:30:00Z'
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - applications
        - computers
        - mobileDevices
        - lastSignIn
        - _links
    UserAccountDetail:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          example: d983ee47-92c9-47ad-9975-ec85d2a479a1
          format: guid
          description: The unique ID of the user.
        userName:
          type: string
          example: ssmith
          nullable: true
          description: The login name for the user.
        status:
          type: string
          example: Active
          nullable: true
          description: The current status of the user.
        email:
          type: string
          example: ssmith@example.com
          nullable: true
          description: The user's email address.
        fullName:
          type: string
          example: Sammy Smith
          nullable: true
          description: The user's full name.
        phoneNumber:
          type: string
          example: 789-654-1236
          nullable: true
          description: The user's phone number.
        mobilePhoneNumber:
          type: string
          example: 789-626-2366
          nullable: true
          description: The user’s mobile phone number.  
        location:
          type: string
          example: Austin
          nullable: true
          description: The user's location.
        roomNumber:
          type: string
          example: '5716'
          nullable: true
          description: The user's room number.
        quarantineDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time at which this user was marked as quarantined.
        lastLogon:
          type: string
          format: date-time
          nullable: true
          description: The date and time this user last logged in.
        lastUpdate:
          type: string
          format: date-time
          nullable: true
          description: The date and time this user was last updated.
        updatedDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time this user was last updated.
        updatedBy:
          type: string
          example: Data Update Job
          nullable: true
          description: The name of the entity that last updated the user.
        meteringHistoryPeriod:
          type: string
          example: 9/14/2023 - 9/15/2023
          nullable: true
          description: The period of time for which user metering data is available.
        managerEmail:
          type: string
          example: bob@flexera.com
          nullable: true
          description: The email address of the manager associated with the user.
        organizationId:
          type: string
          example: d983ee30-92c8-47ad-9976-ec85d2a479a2
          nullable: true
          description: The unique ID of the organization the user belongs to.
        organizationName:
          type: string
          example: Flexera
          nullable: true
          description: The organization name associated with the user.
        organizationalUnit:
          type: string
          example: Laurel_MI
          nullable: true
          description: The organizational unit associated with the user.
        userPrincipalName:
          type: string
          example: ssmith@flexera.com
          nullable: true
          description: The user's principal name.
        orgAd:
          type: string
          example: CN=John Doe,OU=Users,OU=Sales,DC=Flexera,DC=com
          nullable: true
          description: >-
            The qualified path for the user object in the Active
            Directory instance.
        samAccountName:
          type: string
          example: thebagel\\ssmith
          nullable: true
          description: The SAM account name associated with this user.   
        lastUsedComputer:
          $ref: '#/components/schemas/Computer'
        autoQuarantineManagement:
          type: boolean
          example: true
          description: >-
            ```true``` if this user is subject to automatic quarantine management;
            otherwise, ```false```.
        autoEditing:
          type: boolean
          example: true
          description: >-
            ```true``` if this user is subject to automatic editing; otherwise,
            ```false```.
        _links:
          type: array
          description: A collection of links to related resources.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - _links
        - id
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    '400':
      description: >-
        Bad Request: Your request is invalid or improperly formed. Consequently,
        the API server could not understand your request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: 400
              message: Invoice ID field needs to be a string.
    '403':
      description: 'Forbidden: The operation you requested is forbidden and cannot be completed. This could be because you don''t have the required permissions to use the requested endpoint, or the requested endpoint requires purchasing additional features. The recommended action is to abort.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: 403
              message: You do not have permission to access this resource.
    '404':
      description: >-
        Not Found: The operation you requested failed because a resource
        associated with your request could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: 404
              message: >-
                Resource with ID '32aeda0a-80dc-475a-907f-2d250a3a8614' not
                found.
    '500':
      description: 'Internal Server Error: Your request failed due to an internal error.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: 500
              message: >-
                The service encountered an unexpected condition that prevented
                it from fulfilling the request.
tags:
  - name: Aggregation